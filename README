BeagleBoneGreen SWD - a practical tool for computing freedom

					    		Version 0.02
							  2016-05-06
							Niibe Yutaka
					     Flying Stone Technology

BeagleBoneGreen SWD
===================

BeagleBoneGreen SWD (BBG-SWD) is a tool to control SWD protocol by
BeagleBoneGreen.


Note for release 0.02
=====================

The program on PRUSS (Programmable Realtime Unit SubSytem), PRU-SWD,
was updated to support pin control of SRST.

The BBG-SWD driver for OpenOCD is by a patch:

	0001-Add-new-SWD-driver-bbg-swd.patch

The BBG-SWD driver is ready for use.  It is tested with FST-01 (STM32F103),
FSM-55 (STM32F030) and prototype of FS-BB48 (KL27Z256).

Use of "bone-kernel" is assumed for UIO user space PRUSS driver.


Future Works
============

It would be good to support different speed for communication.
Now, it is fixed to 1000kHz.


The purpose
===========

It gives (back) us the control for our computing (freedom), again.


Pins for SWD access
===================

SWD-DIO		P8_11
SWD-CLK		P8_12
SRST		P8_15

Pinmux Configuration

    # echo gpio >/sys/devices/platform/ocp/ocp:P8_11_pinmux/state
    # echo gpio >/sys/devices/platform/ocp/ocp:P8_12_pinmux/state
    # echo gpio_pu >/sys/devices/platform/ocp/ocp:P8_15_pinmux/state


The methodology
===============

It takes advantage of using PRUSS (Programmable Realtime Unit
SubSytem) on the processor, so that the SWD communication could be
reliable, accurate and fast.

It assumes use of PRUSSDRV user space library with UIO user space
PRUSS driver.

I use "bone-kernel" for that.


Software License
================

The program pru-swd.p is distributed under GPLv3+.

The OpenOCD patch  is under GPLv2+.


Patch for OpenOCD
=================

The patch is: 
	0001-Add-new-SWD-driver-bbg-swd.patch

You can configure BBG-SWD driver by the --enable-bbg-swd option.

    ./configure --enable-bbg-swd

You can use it with a configuration like:

-------------------------- File: bbg-swd.cfg
interface bbg-swd
transport select swd
--------------------------

The invacatio of command is something like this:

    $ openocd -f  bbg-swd.cfg -f target/stm32f1x.cfg

The above is the case for FST-01.


For FS-BB48 (which uses Freescale's KL27Z256), I use following configuration.

-------------------------- File: kl27-bbg-swd.cfg
interface bbg-swd
set CHIPNAME kl27
source [find target/klx.cfg]
reset_config srst_only separate srst_nogate srst_push_pull connect_assert_srst
--------------------------


Request-Response
================

FORMAT:
  Request:
	1-byte: CMD
	arg...

  Response:
	value...

Last three bits are valid for CMD.

	HALT		0
	BLINK		1
	GPIO_OUT	2
	GPIO_IN		3
	SIG_IDLE	4
	SIG_GEN		5
	READ_REG	6
	WRITE_REG	7


HALT(): none
	finish execution of PRU

BLINK(delay, counts, led-bit): none
	Blink LED

SIG_IDLE(count): none
	submit idle(=LOW) for COUNT cycles, strobing SWD-CLK

SIG_GEN(bit-len, data...): none
	submit signal pattern to SWD-DIO, strobing SWD-CLK

READ_REG(cmd): parity-and-ack, value
	execute SWD read register transaction

WRITE_REG(cmd,value): ack
	execute SWD write register transaction

GPIO_OUT(bit, value): none
	control GPIO signal directly, output

GPIO_IN(): value
	control GPIO signal directly, input


Enjoy,
-- 
